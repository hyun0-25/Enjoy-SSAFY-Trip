<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.vue.member.model.mapper.MemberMapper">

	<resultMap type="memberDto" id="member">
		<id column="user_id" property="userId"/>
		<result column="nickname" property="nickname"/>		
		<result column="user_password" property="userPassword"/>
		<result column="email" property="email"/>
		<result column="register_date" property="joinDate"/>
		<result column="role" property="role"/> 
		<result column="birthday" property="birthday"/>		
		<result column="user_type" property="userType"/>
	</resultMap>

	<select id="isCheck" parameterType="String" resultType="int">
		select count(user_id)
		from members
		where user_id = #{userId}
	</select>

	<insert id="joinMember" parameterType="MemberDto">
		insert into members (user_id, user_password, nickname, email, register_date, user_type)
		values (#{userId}, #{userPassword}, #{nickname}, #{email}, now(),#{userType})
	</insert>

	<select id="loginMember" parameterType="map" resultMap="member">
		select user_id, nickname, email, role, user_type
		from members
		where user_id = #{userId} and user_password = #{userPassword}
	</select>
	
	<select id="listMember" resultMap="member">
		select user_id, user_password, nickname, email, register_date, role, user_type
		from members
		order by register_date
	</select>
	
	<select id="getMember" parameterType="string" resultMap="member">
		select user_id,user_password, nickname, email,register_date, role, user_type
		from members
		where user_id = #{userId}
	</select>
	
	<update id="updateMember" parameterType="memberDto">
		update members
		<trim prefix="set" suffixOverrides=",">
			<if test="userPassword != null">user_password = #{userPassword},</if>
			<if test="email != null">email= #{email},</if>
			<if test="nickname != null">nickname= #{nickname},</if>
			<if test="birthday != null">birthday= #{birthday},</if>
			<if test="userType != null">user_type= #{userType},</if>
		</trim>
		where user_id = #{userId}
	</update>
	
	<delete id="deleteMember" parameterType="String">
		delete from members
		where user_id = #{userId}
	</delete>
	
<!-- token & login -->
	
	<select id="userInfo" parameterType="string" resultMap="member">
		select user_id, nickname, email, register_date, role, birthday, user_type
		from members
		where user_id = #{userId}
	</select>
	
	
</mapper>