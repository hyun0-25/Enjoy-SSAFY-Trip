<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.vue.map.model.mapper.MapMapper">
	<resultMap type="sidoGugunCodeDto" id="sidoguguncode">
		<result column="sido_code" property="sidoCode"/>
		<result column="sido_name" property="sidoName"/>
		<result column="gugun_code" property="gugunCode"/>
		<result column="gugun_name" property="gugunName"/>
	</resultMap>
	
	<select id="getSido" resultMap="sidoguguncode">
		select sido_code, sido_name
		from sido
		order by sido_code
	</select>
	
	<select id="getGugunInSido" parameterType="int" resultMap="sidoguguncode">
		select gugun_code, gugun_name
		from gugun
		where sido_code = #{sido}
		order by gugun_code
	</select>
	
	<resultMap type="attractionDto" id="attraction">
		<result column="content_id" property="contentId"/>
		<result column="content_type_id" property="contentTypeId"/>
		<result column="title" property="title"/>
		<result column="addr1" property="address"/>
		<result column="sido_code" property="sidoCode"/>
		<result column="gugun_code" property="gugunCode"/>
		<result column="latitude" property="latitude"/>
		<result column="longitude" property="longitude"/>
		<result column="first_image" property="firstImage"/>
		<result column="first_image2" property="firstImage2"/>
		<result column="overview" property="overview"/>
	</resultMap>
	
	<select id="getAttraction" parameterType="int" resultMap="attraction">
		select ai.content_id, ai.content_type_id, ai.title, ai.addr1, ai.sido_code, ai.gugun_code, ai.latitude, ai.longitude, ai.first_image, ai.first_image2, ad.overview
		from attraction_info ai join attraction_description ad
		on ai.content_id = ad.content_id
		where ai.content_id = #{contentid}
	</select>
	
	<sql id="search">
		<if test="word != null and word != ''">
			and title like concat('%', #{word}, '%')
		</if>
	</sql>
	<sql id="allgugun">
		<if test="gugun != 0">
			and ai.gugun_code = #{gugun}
		</if>
		<if test="gugun == 0">
			<if test="word == null or word == ''">
				and ai.gugun_code = #{gugun}
			</if>
		</if>
	</sql>
	<select id="listAttractions" parameterType="map" resultMap="attraction">
		select ai.content_id, ai.content_type_id, ai.title, ai.addr1, ai.sido_code, ai.gugun_code, ai.latitude, ai.longitude, ai.first_image, ai.first_image2, ad.overview
		from attraction_info ai join attraction_description ad
		on ai.content_id = ad.content_id
		where ai.sido_code = #{sido}
		<include refid="allgugun"></include>
		<include refid="search"></include>
	</select>
	
	<resultMap type="mylocationDto" id="mylocation">
		<result column="mylocation_id" property="mylocationId"/>		
		<result column="course_id" property="courseId"/>
		<result column="course_name" property="courseName"/>
		<result column="user_id" property="userId"/>
		<result column="content_id" property="contentId"/>
		<result column="order" property="order"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="course_order" property="courseOrder"/>
	</resultMap>
	
	<resultMap type="TripDto" id="trip">
		<result column="course_id" property="courseId"/>
		<result column="course_name" property="courseName"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
	</resultMap>
	
	<insert id="writeMyLocation" parameterType="java.util.List">
		<selectKey resultType="int" keyProperty="nextcourseId" order="BEFORE">
		 	select if(isnull(max(course_id)), 1, max(course_id)+1) from mylocation
		</selectKey>
		insert into mylocation(course_id, course_name, user_id, content_id, `order`, start_date, end_date, course_order)
		values
		<foreach collection="mylocationlist" item="item" separator=" , ">
			(#{nextcourseId}, #{item.courseName}, #{item.userId}, #{item.contentId}, #{item.order}, #{item.startDate}, #{item.endDate}, #{item.courseOrder})
		</foreach>
	</insert>
	
	<select id="mylocationList" parameterType="string" resultMap="trip">
		select course_id, max(course_name) AS course_name, max(start_date) AS start_date, max(end_date) AS end_date
		from mylocation
		where user_id = #{userId}
		group by course_id;
	</select>
	
	<select id="courseList" parameterType="int" resultMap="mylocation">
		select *
		from mylocation
		where course_id = #{courseId};
	</select>
	
<<<<<<< HEAD
	<select id="AllLocationList" parameterType="string" resultMap="trip">
		select course_id, max(course_name) AS course_name, max(start_date) AS start_date, max(end_date) AS end_date
		from mylocation
		group by course_id 
        order by course_id desc;
	</select>
=======
	<delete id="deleteCourse" parameterType="int">
		delete
		from mylocation
		where course_id = #{courseId}
	</delete>
>>>>>>> 7960f77588c7654ddcb265d563042487d83fddd1
	
	
	
</mapper>