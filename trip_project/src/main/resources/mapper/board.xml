<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.vue.board.model.mapper.BoardMapper">

	<!-- Board 관련 -->
	
	<resultMap type="boardDto" id="board">
		<result column="board_id" property="boardId"/>
		<result column="user_id" property="userId"/>
		<result column="nickname" property="nickName"/>
		<result column="board_type" property="boardType"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="hit" property="hit"/>
		<result column="register_date" property="registerDate"/>
		<result column="total_like" property="totalLike"/>
	</resultMap>
	
	<resultMap type="boardDto" id="viewArticle" extends="board">
		<collection property="fileInfos" column="board_id" javaType="list" ofType="fileInfoDto" select="fileInfoList"/>
	</resultMap>
	

	<resultMap type="fileInfoDto" id="file">
		<result column="image_id" property="imageId"/>
		<result column="save_folder" property="saveFolder"/>
		<result column="original_file" property="originalFile"/>
		<result column="save_file" property="saveFile"/>
	</resultMap>


	<insert id="writeArticle" parameterType="boardDto">
		insert into board (user_id, board_type, title, content, hit, register_date)
		values (#{userId}, #{boardType}, #{title}, #{content}, 0, now())
		<selectKey resultType="int" keyProperty="boardId" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="registerFile" parameterType="boardDto">
		insert into image_info (board_id, save_folder, original_file, save_file)
		values
		<foreach collection="fileInfos" item="fileinfo" separator=" , ">
			(#{boardId}, #{fileinfo.saveFolder}, #{fileinfo.originalFile}, #{fileinfo.saveFile})
		</foreach>
	</insert>

	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'title'">
				and title like concat('%', #{word}, '%')
			</if>
			<if test="key == 'content'">
				and content like concat('%', #{word}, '%')
			</if>
			<if test="key == 'nickname'">
				and ${key} = #{word}
			</if>
		</if>
	</sql>

	<select id="listArticle" parameterType="map" resultMap="viewArticle">
		select b.board_id, b.user_id, b.board_type, b.title, b.content, b.hit, b.register_date, b.total_like, m.nickname
		from board b, members m 
		where b.user_id = m.user_id
		<include refid="search"></include>
		order by b.board_id desc
	</select>
	
	<select id="listTypeArticle" parameterType="map" resultMap="viewArticle">
		select b.board_id, b.user_id, b.board_type, b.title, b.content, b.hit, b.register_date, b.total_like, m.nickname
		from board b, members m 
		where b.user_id = m.user_id
		and b.board_type = #{type}
		<include refid="search"></include>
		order by b.board_id desc
	</select>
	
	<select id="getTotalArticleCount" parameterType="map" resultType="int">
		select count(board_id)
		from board
		<where>
			<include refid="search"></include>
		</where>
	</select>
	
	<select id="getArticle" parameterType="int" resultMap="viewArticle">
		select b.board_id, b.user_id, b.board_type, b.title, b.content, b.hit, b.register_date, b.total_like, m.nickname
		from board b, members m 
		where b.user_id = m.user_id
		and b.board_id = #{boardId}
	</select>
	
	<select id="fileInfoList" resultMap="file">
		select image_id, save_folder, original_file, save_file
		from image_info
		where board_id = #{boardId}
	</select>
	
	<update id="updateHit" parameterType="int">
		update board
		set hit = hit + 1
		where board_id = #{boardId}
	</update>
	
	<update id="modifyArticle" parameterType="boardDto">
		update board
		set title = #{title}, content = #{content}
		where board_id = #{boardId}
	</update>
	
	<delete id="deleteFile" parameterType="int">
		delete from image_info
		where board_id = #{boardId}
	</delete>
	
	<delete id="deleteComment" parameterType="int">
		delete from comment
		where board_id = #{boardId}
	</delete>
	
	<delete id="deleteArticle" parameterType="int">
		delete from board
		where board_id = #{boardId}
	</delete>
	
	<!-- Comment 관련 -->
	
	<resultMap type="boardCommentDto" id="boardcomment">
		<result column="comment_id" property="commentId"/>		
		<result column="user_id" property="userId"/>
		<result column="nickname" property="nickName"/>
		<result column="board_id" property="boardId"/>
		<result column="content" property="content"/>
		<result column="register_date" property="registerDate"/>
	</resultMap>
	
	<select id="listAllComment" resultMap="boardcomment">
		select c.comment_id, c.user_id, c.board_id, c.content, c.register_date, m.nickname
		from comment c, members m 
		where c.user_id = m.user_id
		order by c.comment_id
	</select>
	
	<select id="listArticleComment" parameterType="int" resultMap="boardcomment">
		select c.comment_id, c.user_id, c.board_id, c.content, c.register_date, m.nickname
		from comment c, members m 
		where c.user_id = m.user_id
		and c.board_id = #{boardId}
		order by c.comment_id
	</select>
	
	
	<insert id="writeArticleComment" parameterType="boardCommentDto">
		insert into comment (user_id, board_id, content, register_date)
		values (#{userId}, #{boardId}, #{content}, now())
		<selectKey resultType="int" keyProperty="commentId" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<update id="modifyArticleComment" parameterType="boardCommentDto">
		update comment
		set content = #{content}
		where comment_id = #{commentId}
	</update>
	
	<delete id="deleteArticleComment" parameterType="int">
		delete from comment
		where comment_id = #{commentId}
	</delete>
	
	<!-- like 관련 -->
	<insert id="likeArticle" parameterType="boardLikeDto">
		insert into `like` (user_id, board_id)
		values (#{userId}, #{boardId})
	</insert>
	
	<delete id="deletelikeArticle" parameterType="boardLikeDto">
		delete from `like`
		where user_id = #{userId}
		and board_id = #{boardId} 
	</delete>
	
	<update id="addTotalLike" parameterType="int">
		update board
		set total_like = total_like + 1
		where board_id = #{boardId}
	</update>
	<update id="deleteTotalLike" parameterType="int">
		update board
		set total_like = total_like - 1
		where board_id = #{boardId}
	</update>
	
	<resultMap type="boardLikeDto" id="boardlike">
		<result column="user_id" property="userId"/>
		<result column="board_id" property="boardId"/>
	</resultMap>
	
	<select id="islikeArticle" parameterType="boardLikeDto" resultType="int">
		select count(*)
		from `like`
		where user_id=#{userId} and board_id=#{boardId};
	</select>
	
	
</mapper>